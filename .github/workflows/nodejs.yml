# Copyright New Relic, Inc.
# SPDX-License-Identifier: Apache-2.0
---

name: "NodeJs Init Container CI"

concurrency:
  group: ${{ github.ref_name || github.ref || github.run_id }}-${{ github.workflow }}
  cancel-in-progress: true

on:
  pull_request:
    paths:
      - 'src/nodejs/**'
      - 'tests/nodejs/**'
      - '.github/workflows/nodejs.yml'
      - '.github/workflows/publish.yml'
      - '.github/workflows/test.yml'
      - '.github/actions/**'
  push:
    paths:
      - 'src/nodejs/**'
      - 'tests/nodejs/**'
      - '.github/workflows/nodejs.yml'
      - '.github/workflows/publish.yml'
      - '.github/workflows/test.yml'
      - '.github/actions/**'
    branches:
      - main
    # Do not run when a tag is created.
    tags-ignore:
      - "**"
  release:
    types:
      - published
  workflow_call:
    
env:
  INITCONTAINER_LANGUAGE: nodejs

# Declare default permissions as read only.
permissions: read-all

jobs:
  test:
    if: github.event_name != 'release' || (github.event_name == 'release' && endsWith(github.ref, '_nodejs')) # Skip everything if this isn't Node
    secrets: inherit
    uses: ./.github/workflows/test.yml
    strategy:
      fail-fast: false
      matrix:
        node-version: [20, 22, 24]
        architecture: ["linux/amd64", "linux/arm64", "linux/arm"]
        exclude:
          - node-version: 24
            architecture: linux/arm
    with:
      INITCONTAINER_LANGUAGE: nodejs
      INITCONTAINER_BUILD_ARGS: RUNTIME_VERSION=${{ matrix.node-version }}
      ARCHITECTURE: ${{ matrix.architecture }}
      TEST_APP_BUILD_ARGS: RUNTIME_VERSION=${{ matrix.node-version }}

  publish:
    if: github.event_name == 'release' && endsWith(github.ref, '_nodejs') # Skip everything if this isn't Node
    needs: test
    uses: ./.github/workflows/publish.yml
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        include:
          - node-version: 20
            architecture: "linux/amd64,linux/arm64,linux/arm"
          - node-version: 22
            architecture: "linux/amd64,linux/arm64,linux/arm"
          - node-version: 24
            architecture: "linux/amd64,linux/arm64"
    with:
      INITCONTAINER_LANGUAGE: nodejs
      DOCKER_IMAGE_NAME: newrelic/newrelic-node-init
      DOCKER_IMAGE_TAG_SUFFIX: nodejs${{ matrix.node-version }}x
      DOCKER_IMAGE_TAG_IS_DEFAULT_SUFFIX: ${{ matrix.node-version == 24 }}
      ARCHITECTURE: ${{ matrix.architecture }}
      BUILD_ARGS: |
        RUNTIME_VERSION=${{ matrix.node-version }}
