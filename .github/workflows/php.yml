# Copyright New Relic, Inc.
# SPDX-License-Identifier: Apache-2.0
---

name: "PHP Init Container CI"

concurrency:
  group: ${{ github.ref_name || github.ref || github.run_id }}-${{ github.workflow }}
  cancel-in-progress: true

on:
  pull_request:
    paths:
      - 'src/php/**'
      - 'tests/php/**'
      - '.github/workflows/php.yml'
      - '.github/workflows/publish.yml'
      - '.github/workflows/test.yml'
      - '.github/actions/**'
  push:
    paths:
      - 'src/php/**'
      - 'tests/php/**'
      - '.github/workflows/php.yml'
      - '.github/workflows/publish.yml'
      - '.github/workflows/test.yml'
      - '.github/actions/**'
    branches:
      - main
    # Do not run when a tag is created.
    tags-ignore:
      - "**"
  release:
    types:
      - published

# Declare default permissions as read only.
permissions: read-all

jobs:
  test:
    if: github.event_name != 'release' || (github.event_name == 'release' && endsWith(github.ref, '_php')) # Skip everything if this isn't PHP
    secrets: inherit
    uses: ./.github/workflows/test.yml
    strategy:
      fail-fast: false
      matrix:
        php-version: ['7.2', '7.3', '7.4', '8.0', '8.1', '8.2', '8.3']
        libc: [gnu, musl]
        arch: [linux/amd64, linux/arm64]
        exclude:
          - arch: linux/arm64
            php-version: '7.2'
          - arch: linux/arm64
            php-version: '7.3'
          - arch: linux/arm64
            php-version: '7.4'
    with:
      INITCONTAINER_LANGUAGE: php
      ARCHITECTURE: ${{ matrix.arch }}
      INITCONTAINER_BUILD_ARGS: LIBC=${{ matrix.libc }}
      TEST_APP_BUILD_ARGS: PHP_IMAGE_TAG=${{ matrix.php-version }}-${{ matrix.libc == 'musl' && 'fpm-alpine' || 'fpm' }}
      TEST_APP_HELM_CHART_ARGS: --set=phpVersion=${{ matrix.php-version }}

  publish:
    if: github.event_name == 'release' && endsWith(github.ref, '_php') # Skip everything if this isn't PHP
    needs: test
    uses: ./.github/workflows/publish.yml
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        libc: [gnu, musl]
    with:
      INITCONTAINER_LANGUAGE: php
      ARCHITECTURE: linux/amd64,linux/arm64
      DOCKER_IMAGE_NAME: newrelic/newrelic-php-init
      DOCKER_IMAGE_TAG_SUFFIX: ${{ matrix.arch == 'gnu' && 'glibc' || 'musl' }}
      DOCKER_IMAGE_TAG_IS_DEFAULT_SUFFIX: ${{ matrix.arch == 'gnu' }}
      BUILD_ARGS: LIBC=${{ matrix.libc }}
